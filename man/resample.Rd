% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resample.R
\name{resample}
\alias{resample}
\alias{resample_series}
\title{Resampling data}
\usage{
resample(data, new_intervall, statistic = "mean", data.thresh = NULL,
  start.date = NULL, end.date = NULL, drop.last = FALSE,
  percentile = 95)

resample_series(serie, new_intervall, statistic = "mean",
  data.thresh = NULL, start.date = NULL, end.date = NULL,
  drop.last = FALSE, percentile = 95)
}
\arguments{
\item{data}{A tibble in rOstluft long format}

\item{new_intervall}{New Intervall. Must be longer than actual Intervall (not checked)}

\item{statistic}{Statistical method to apply when aggregating the data; default is the mean.
Can be one of “mean”, “max”, “min”, “median”, “frequency”, “sd”, “percentile”. Note that “sd”
is the standard deviation, “frequency” is the number (frequency) of valid records in the period
and “data.cap” is the percentage data capture. “percentile” is the percentile level (\%) between
0-100, which can be set using the “percentile” argument.
Or a function with one argument expecting a vector.
Or a list with parameter as name and the statistical method as value (function or name of method)}

\item{data.thresh}{minimum data capture threshold in \% to use}

\item{start.date}{optional start date for padding. Default min date in series floored to the new intervall}

\item{end.date}{optional end date for padding. Default max date in series ceiled to the new intervall}

\item{drop.last}{optional drop the last added time point by padding. Default False, true if no end.date
provided and max date != ceiled max date.}

\item{percentile}{The percentile level in \% used when statistic = "percentile". The default is 95.}

\item{serie}{a tibble in rOstluft long format containing exactly one serie}
}
\value{
tibble with resampled data
}
\description{
Aggregate data by different time periods. Following this simple steps:
\itemize{
\item split data in series
\itemize{
\item pad data serie (needed for calculation of capture threshold)
\item group serie by new intervall with \code{\link[lubridate:floor_date]{lubridate::floor_date()}}
\item apply statistical method or user provides function (user can provide list per parameter)
}
\item combine resampled series
}
}
\section{TODO Wind }{

Need a solution for wind vectoring ... this isn't as simple. probably need group all wind and non
wind parameters. Handle wind like now and do something special with the wind vars. One possible to
group:\preformatted{dg <- dplyr::group_by(data, isWind = .data$parameter \%in\% c("WD", "WVv", "WVs"))
tidyr::nest()
A tibble: 2 x 2
 isWind data
 <lgl>  <list>
 1 FALSE  <tibble [208,344 x 6]>
 2 TRUE   <tibble [35,037 x 6]>
}

This was the easy part :P. now join the wind data, calc vector mean and return.
}


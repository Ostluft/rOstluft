% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wmean-full-intervall.R
\name{wmean_full_interval}
\alias{wmean_full_interval}
\title{calculates weighted arithmetic means to match full time intervals from overlapping intervals}
\usage{
wmean_full_interval(df, startinterval = "starttime",
  endinterval = "endtime", value = "value", groups = NULL,
  res = lubridate::hours(1))
}
\arguments{
\item{df}{data.frame for averaging; df has to be in long format and contain a start- and end-time column of class POSIXct (arbitrarily named)}

\item{startinterval}{string; name of start-time column}

\item{endinterval}{string; name of end-time column}

\item{value}{string; name of column containing values to be averaged}

\item{groups}{string, optional => can be NULL; name of column containing values for grouping (using dplyr::group_by()) when calculating weighted means (e.g. for different measurement parameters)}

\item{res}{object of class "lubridate::Period" specifying the intervall for averaging (e.g. lubridate::hours(1))}
}
\value{
data.frame with columns for interval start-time ("start"), interval end-time ("end"), "groups" (optional), "mean", "n" (sum of weighted intervals within the averaged time interval)
}
\description{
Sometimes records (e.g. measurements from passive samplers or miniDOAS) provide values representative for time intervals such as
starting from odd start times to odd end times (e.g. 09:58 to 10:08 or 20 Feb to 06 March) with respect to full time intervals
for mean intervals (e.g. 09:00 to 10:00 or 01 Feb to 28 Feb). To make such time series intercomparable
and provide a standardized way of dealing with aggregated data, wmean_full_interval() provides a method to average
a data.frame containing start- and end-time information to full time intervals based on stats::weighted.mean().
}
\keyword{statistics}

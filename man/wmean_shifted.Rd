% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wmean-full-intervall.R
\name{wmean_shifted}
\alias{wmean_shifted}
\title{Calculates weighted arithmetic means to converted shifted intervals to regular}
\usage{
wmean_shifted(data, ..., starttime = "starttime", endtime = "endtime",
  value = "value", interval = lubridate::hours(1))
}
\arguments{
\item{data}{data.frame for averaging; df has to be in long format and contain a start- and end-time
column of class POSIXct (arbitrarily named)}

\item{...}{columns containing values for grouping (passed to \code{dplyr::group_by()}) when calculating
weighted means (e.g. for different measurement parameters). Columns not explicitly passed are dropped}

\item{starttime}{name of starttime column as symbol or string}

\item{endtime}{name of endtime column  as symbol or string}

\item{value}{name of column containing values to be averaged as symbol or string}

\item{interval}{specifying the output interval for averaging as \code{lubridate::Period} (e.g. lubridate::hours(1))}
}
\value{
tibble with the starttime, endtime, value and grouping columns and additional the column "n" containing the
sum of weighted intervals within the averaged time interval
}
\description{
Sometimes records (e.g. measurements from passive samplers or miniDOAS) provide values representative for time
intervals such as starting from odd start times to odd end times (e.g. 09:58 to 10:08 or 20 Feb to 06 March) with
respect to full time intervals  for mean intervals (e.g. 09:00 to 10:00 or 01 Feb to 28 Feb). To make such time
series intercomparable and provide a standardized way of dealing with aggregated data, wmean_full_interval()
provides a method to average a data.frame containing start- and end-time information to full time intervals based
on stats::weighted.mean().
}
\section{Restrictions}{

\itemize{
\item input data has to contain evenly spaced time series (eg. 10min interval)
\item the output intervals has to be greater or equal (>=) than the input interval
\item no handling of missing data threshold. One existing value is enough
}
}

\examples{
fn <- system.file("extdata", "Zch_Stampfenbachstrasse_h1_2013_Jan.csv", package = "rOstluft.data")
data <- read_airmo_csv(fn, time_shift = lubridate::period(20, "minutes"))

df <- pluck_parameter(data, "CO") \%>\%
  pluck_unit(unit, "ppm") \%>\%
  dplyr::mutate(endtime = .data$starttime + lubridate::hours(1)) \%>\%
  dplyr::select(-interval)

wmean_shifted(df, site, parameter, unit, interval = lubridate::hours(1))

wmean_shifted(df, site, parameter, unit, interval = lubridate::days(1))

wmean_shifted(df, site, parameter, unit, interval = lubridate::period(1, "month"))
}
\keyword{statistics}
